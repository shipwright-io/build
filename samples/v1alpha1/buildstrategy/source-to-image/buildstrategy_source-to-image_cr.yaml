apiVersion: shipwright.io/v1alpha1
kind: ClusterBuildStrategy
metadata:
  name: source-to-image
spec:
  volumes:
    - name: gen-source
      emptyDir: {}
  buildSteps:
    - command:
        - /usr/local/bin/s2i
        - build
        - $(params.shp-source-context)
        - $(build.builder.image)
        - '--as-dockerfile'
        - /gen-source/Dockerfile.gen
      image: quay.io/openshift-pipeline/s2i:nightly
      imagePullPolicy: Always
      name: s2i-build-as-dockerfile
      volumeMounts:
        - mountPath: /gen-source
          name: gen-source
      workingDir: $(params.shp-source-root)
    - name: build-and-push
      image: gcr.io/kaniko-project/executor:null
      command:
        - /kaniko/executor
      args:
        - --dockerfile
        - /gen-source/Dockerfile.gen
        - --context
        - /gen-source
        - --destination
        - $(params.shp-output-image)
        - --snapshot-mode
        - redo
        - --no-push
        - --tar-path
        - $(params.shp-output-directory)/image.tar
        # https://github.com/GoogleContainerTools/kaniko/issues/2164
        - --ignore-path
        - /product_uuid
      env:
        - name: DOCKER_CONFIG
          value: /tekton/home/.docker
        - name: HOME
          value: /tekton/home
        - name: AWS_ACCESS_KEY_ID
          value: NOT_SET
        - name: AWS_SECRET_KEY
          value: NOT_SET
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
            - CHOWN
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            - SETFCAP
            - KILL
      volumeMounts:
        - mountPath: /gen-source
          name: gen-source
      workingDir: /gen-source
  securityContext:
    runAsUser: 0
    runAsGroup: 0
